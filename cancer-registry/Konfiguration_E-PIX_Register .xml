

<ma:MatchingConfiguration xmlns:ma="http://www.ttp.icmvc.emau.org/deduplication/config/model"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://www.ttp.icmvc.emau.org/deduplication/config/model matching-config-2.9.0.xsd ">
	<matching-mode>MATCHING_IDENTITIES</matching-mode>
	<mpi-generator>org.emau.icmvc.ttp.epix.gen.impl.EAN13Generator</mpi-generator>
	<mpi-prefix>1001</mpi-prefix>
	<use-notifications>false</use-notifications>
	<limit-search-to-reduce-memory-consumption>false</limit-search-to-reduce-memory-consumption>
	<persist-mode>IDENTIFYING</persist-mode>

	<required-fields>
		<name>firstName</name>
		<name>lastName</name>
		<name>birthDate</name>
		<name>gender</name>
	</required-fields>
	<preprocessing-config>
		<preprocessing-field>
			<field-name>firstName</field-name>
			<simple-transformation-type xsi:type="ma:SimpleTransformation">
				<input-pattern>?</input-pattern>
				<output-pattern></output-pattern>
			</simple-transformation-type>
			<simple-transformation-type xsi:type="ma:SimpleTransformation">
				<input-pattern>ÃƒÂ©</input-pattern>
				<output-pattern>e</output-pattern>
			</simple-transformation-type>
			<simple-transformation-type xsi:type="ma:SimpleTransformation">
				<input-pattern>Dr.</input-pattern>
				<output-pattern></output-pattern>
			</simple-transformation-type>
			<simple-transformation-type xsi:type="ma:SimpleTransformation">
				<input-pattern>Prof.</input-pattern>
				<output-pattern></output-pattern>
			</simple-transformation-type>
			<simple-transformation-type xsi:type="ma:SimpleTransformation">
				<input-pattern>med.</input-pattern>
				<output-pattern></output-pattern>
			</simple-transformation-type>
			<simple-transformation-type xsi:type="ma:SimpleTransformation">
				<input-pattern>rer.</input-pattern>
				<output-pattern></output-pattern>
			</simple-transformation-type>
			<simple-transformation-type xsi:type="ma:SimpleTransformation">
				<input-pattern>nat.</input-pattern>
				<output-pattern></output-pattern>
			</simple-transformation-type>
			<simple-transformation-type xsi:type="ma:SimpleTransformation">
				<input-pattern>Ing.</input-pattern>
				<output-pattern></output-pattern>
			</simple-transformation-type>
			<simple-transformation-type xsi:type="ma:SimpleTransformation">
				<input-pattern>Dipl.</input-pattern>
				<output-pattern></output-pattern>
			</simple-transformation-type>
			<simple-transformation-type xsi:type="ma:SimpleTransformation">
				<input-pattern>,</input-pattern>
				<output-pattern></output-pattern>
			</simple-transformation-type>
			<simple-transformation-type xsi:type="ma:SimpleTransformation">
				<input-pattern>-</input-pattern>
				<output-pattern></output-pattern>
			</simple-transformation-type>
			<complex-transformation-type xsi:type="ma:ComplexTransformation">
				<qualified-class-name>org.emau,icmvc.ttp.deduplication.preprocessing.impl.ToUpperCaseTransformation</qualified-class-name>
			</complex-transformation-type>
			<complex-transformation-type xsi:type="ma:ComplexTransformation">
				<qualified-class-name>org.emau,icmvc.ttp.deduplication.preprocessing.impl.CharsMutationTransformation</qualified-class-name>
			</complex-transformation-type>
		</preprocessing-field>
		<preprocessing-field>
			<field-name>lastName </field-name>
			<simple-transformation-type xsi:type="ma:SimpleTransformation">
				<input-pattern>?</input-pattern>
				<output-pattern></output-pattern>
			</simple-transformation-type>
			<simple-transformation-type xsi:type="ma:SimpleTransformation">
				<input-pattern>ÃÂ©</input-pattern>
				<output-pattern>e</output-pattern>
			</simple-transformation-type>
			<simple-transformation-type xsi:type="ma:SimpleTransformation">
				<input-pattern>Dr.</input-pattern>
				<output-pattern></output-pattern>
			</simple-transformation-type>
			<simple-transformation-type xsi:type="ma:SimpleTransformation">
				<input-pattern>Prof.</input-pattern>
				<output-pattern></output-pattern>
			</simple-transformation-type>
			<simple-transformation-type xsi:type="ma:SimpleTransformation">
				<input-pattern>med.</input-pattern>
				<output-pattern></output-pattern>
			</simple-transformation-type>
			<simple-transformation-type xsi:type="ma:SimpleTransformation">
				<input-pattern>rer.</input-pattern>
				<output-pattern></output-pattern>
			</simple-transformation-type>
			<simple-transformation-type xsi:type="ma:SimpleTransformation">
				<input-pattern>nat.</input-pattern>
				<output-pattern></output-pattern>
			</simple-transformation-type>
			<simple-transformation-type xsi:type="ma:SimpleTransformation">
				<input-pattern>Ing.</input-pattern>
				<output-pattern></output-pattern>
			</simple-transformation-type>
			<simple-transformation-type xsi:type="ma:SimpleTransformation">
				<input-pattern>Dipl.</input-pattern>
				<output-pattern></output-pattern>
			</simple-transformation-type>
			<simple-transformation-type xsi:type="ma:SimpleTransformation">
				<input-pattern>,</input-pattern>
				<output-pattern></output-pattern>
			</simple-transformation-type>
			<simple-transformation-type xsi:type="ma:SimpleTransformation">
				<input-pattern>-</input-pattern>
				<output-pattern></output-pattern>
			</simple-transformation-type>
			<complex-transformation-type xsi:type="ma:ComplexTransformation">
				<qualified-class-name>org.emau,icmvc.ttp.deduplication.preprocessing.impl.ToUpperCaseTransformation</qualified-class-name>
			</complex-transformation-type>
			<complex-transformation-type xsi:type="ma:ComplexTransformation">
				<qualified-class-name>org.emau,icmvc.ttp.deduplication.preprocessing.impl.CharsMutationTransformation</qualified-class-name>
			</complex-transformation-type>
		</preprocessing-field>
	</preprocessing-config>
	<matching>
		<threshold-possible-match>10.5</threshold-possible-match>
		<threshold-automatic-match>14.5</threshold-automatic-match>
		<use-cemfim>false</use-cemfim>
		<parallel-matching-after>1000</parallel-matching-after>
		<number-of-threads-for-matching>4</number-of-threads-for-matching>
		<field>
			<name>firstName</name>
			<blocking-threshold>0.5</blocking-threshold>
			<matching-threshold>1</matching-threshold>
			<weight>8</weight>
			<algorithm>org.emau.icmvc.ttp.deduplication.impl.LevenshteinAlgorithm</algorithm>
			<multiple-values>
				<separator> </separator>
				<penalty-not-a-perfect-match>0.5</penalty-not-a-perfect-match>
				<penalty-one-short>0.5</penalty-one-short>
				<penalty-both-short>0.5</penalty-both-short>
			</multiple-values>
		</field>
		<field>
			<name>lastName</name>
			<matching-threshold>0.6</matching-threshold>
			<weight>5</weight>
			<algorithm>org.emau.icmvc.ttp.deduplication.impl.LevenshteinAlgorithm</algorithm>
		</field>
		<field>
			<name>gender</name>
			<matching-threshold>0.75</matching-threshold>
			<weight>3</weight>
			<algorithm>org.emau.icmvc.ttp.deduplication.impl.LevenshteinAlgorithm</algorithm>
		</field>
		<field>
			<name>birthDate</name>
			<blocking-threshold>0.7</blocking-threshold>
			<blocking-mode>NUMBERS</blocking-mode>
			<matching-threshold>0.7</matching-threshold>
			<weight>12</weight>
			<algorithm>org.emau.icmvc.ttp.deduplication.impl.LevenshteinAlgorithm</algorithm>
		</field>
		<field>
			<name>postCode</name>
			<matching-threshold>0.75</matching-threshold>
			<weight>3</weight>
			<algorithm>org.emau.icmvc.ttp.deduplication.impl.LevenshteinAlgorithm</algorithm>
		</field>
	</matching>
</ma:MatchingConfiguration>